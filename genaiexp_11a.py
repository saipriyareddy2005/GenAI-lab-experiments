# -*- coding: utf-8 -*-
"""genaiexp_11a.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IzZw6VRlV5VaJ3ImTb6lNjQmJf-nHdHa
"""

!pip install fastapi uvicorn nest_asyncio pyngrok
!ngrok config add-authtoken 33fSFHwZWMTLsBmwzMitKb2HRqO_5vLvpC7JRQRbcejRFwnUH

import nest_asyncio
from pyngrok import ngrok
from fastapi import FastAPI
from pydantic import BaseModel
from typing import List
import uvicorn
import asyncio

# Allow nested event loops (required in Colab)
nest_asyncio.apply()

# Create FastAPI app
app = FastAPI(title="FastAPI Chat App (Colab-Safe)")
chat_history = []
class Message(BaseModel):
    sender: str
    text: str
@app.post("/chat")
def send_message(message: Message):
    chat_history.append(message.dict())
    return {"status": "Message received", "message": message}
@app.get("/history", response_model=List[Message])
def get_history():
    return chat_history

# Kill previous tunnels
!killall ngrok
ngrok.kill()

# Start ngrok tunnel
port = 8000 # Changed port number
from pyngrok import ngrok

# Ensure ngrok is killed before starting a new tunnel
ngrok.kill()

# Try connecting with pooling enabled
public_url = ngrok.connect(port, options={"pooling_enabled": True}).public_url
print(f"Public URL: {public_url}\nDocs: {public_url}/docs")

